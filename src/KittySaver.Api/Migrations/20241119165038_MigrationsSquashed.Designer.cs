// <auto-generated />
using System;
using System.Collections.Generic;
using KittySaver.Api.Shared.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KittySaver.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241119165038_MigrationsSquashed")]
    partial class MigrationsSquashed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KittySaver.Api.Shared.Domain.Advertisement.Advertisement", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ClosedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ExpiresOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModificationBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModificationOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("PriorityScore")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.ComplexProperty<Dictionary<string, object>>("ContactInfoEmail", "KittySaver.Api.Shared.Domain.Advertisement.Advertisement.ContactInfoEmail#Email", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("ContactInfoPhoneNumber", "KittySaver.Api.Shared.Domain.Advertisement.Advertisement.ContactInfoPhoneNumber#PhoneNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(31)
                                .HasColumnType("nvarchar(31)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Description", "KittySaver.Api.Shared.Domain.Advertisement.Advertisement.Description#Description", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(1000)
                                .HasColumnType("nvarchar(1000)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("PickupAddress", "KittySaver.Api.Shared.Domain.Advertisement.Advertisement.PickupAddress#Address", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("BuildingNumber")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)");

                            b1.Property<string>("State")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");
                        });

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Advertisements", (string)null);
                });

            modelBuilder.Entity("KittySaver.Api.Shared.Domain.Persons.Cat", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdvertisementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AgeCategory")
                        .HasColumnType("int");

                    b.Property<int>("Behavior")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("HealthStatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdopted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCastrated")
                        .HasColumnType("bit");

                    b.Property<string>("LastModificationBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModificationOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MedicalHelpUrgency")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("PriorityScore")
                        .HasColumnType("float");

                    b.ComplexProperty<Dictionary<string, object>>("AdditionalRequirements", "KittySaver.Api.Shared.Domain.Persons.Cat.AdditionalRequirements#Description", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(1000)
                                .HasColumnType("nvarchar(1000)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Name", "KittySaver.Api.Shared.Domain.Persons.Cat.Name#CatName", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");
                        });

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.HasIndex("PersonId");

                    b.ToTable("Cats", (string)null);
                });

            modelBuilder.Entity("KittySaver.Api.Shared.Domain.Persons.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("CurrentRole")
                        .HasColumnType("int");

                    b.Property<string>("LastModificationBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModificationOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("UserIdentityId")
                        .HasColumnType("uniqueidentifier");

                    b.ComplexProperty<Dictionary<string, object>>("DefaultAdvertisementsContactInfoEmail", "KittySaver.Api.Shared.Domain.Persons.Person.DefaultAdvertisementsContactInfoEmail#Email", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("DefaultAdvertisementsContactInfoPhoneNumber", "KittySaver.Api.Shared.Domain.Persons.Person.DefaultAdvertisementsContactInfoPhoneNumber#PhoneNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(31)
                                .HasColumnType("nvarchar(31)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("DefaultAdvertisementsPickupAddress", "KittySaver.Api.Shared.Domain.Persons.Person.DefaultAdvertisementsPickupAddress#Address", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("BuildingNumber")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)");

                            b1.Property<string>("State")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Email", "KittySaver.Api.Shared.Domain.Persons.Person.Email#Email", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("FirstName", "KittySaver.Api.Shared.Domain.Persons.Person.FirstName#FirstName", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("LastName", "KittySaver.Api.Shared.Domain.Persons.Person.LastName#LastName", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("PhoneNumber", "KittySaver.Api.Shared.Domain.Persons.Person.PhoneNumber#PhoneNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(31)
                                .HasColumnType("nvarchar(31)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("ResidentalAddress", "KittySaver.Api.Shared.Domain.Persons.Person.ResidentalAddress#Address", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("BuildingNumber")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)");

                            b1.Property<string>("State")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");
                        });

                    b.HasKey("Id");

                    b.ToTable("Persons", (string)null);
                });

            modelBuilder.Entity("KittySaver.Api.Shared.Domain.Advertisement.Advertisement", b =>
                {
                    b.HasOne("KittySaver.Api.Shared.Domain.Persons.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KittySaver.Api.Shared.Domain.Persons.Cat", b =>
                {
                    b.HasOne("KittySaver.Api.Shared.Domain.Advertisement.Advertisement", null)
                        .WithMany()
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("KittySaver.Api.Shared.Domain.Persons.Person", null)
                        .WithMany("Cats")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KittySaver.Api.Shared.Domain.Persons.Person", b =>
                {
                    b.Navigation("Cats");
                });
#pragma warning restore 612, 618
        }
    }
}
