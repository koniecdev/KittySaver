@page "/register"
@using KittySaver.Shared.Hateoas
@using KittySaver.Shared.Requests
@using KittySaver.Wasm.Shared.HttpClients
@inherits KittySaver.Wasm.Shared.Components.ApiAwareComponentBase
@inject IApiClient ApiClient
@inject NavigationManager NavigationManager

<PageTitle>Uratujkota.pl - Rejestracja konta - Bo życie kotków jest priorytetem - Portal adopcyjny dla potrzebujących
    kotów.
</PageTitle>

<div class="register_wrapper">
    <section class="register_container">
        <header>
            <h2>Rejestracja konta</h2>
            <p>Konto w naszym serwisie umożliwia dodawanie ogłoszeń adopcyjnych - nie potrzebujesz konta, jeżeli chcesz tylko adoptować kociaki!</p>
        </header>
        <EditForm Model="_registerDto" OnSubmit="HandleRegister" class="register_form">
            <header>
                <h3>
                    Twoje dane
                </h3>
                <p>
                    Nikomu nie udostępnimy twojego prywatnego adresu email oraz prywatnego numeru telefonu.
                    <br>
                    Twój kontaktowy adres email i kontaktowy numer telefonu będą widoczne dopiero po dodaniu ogłoszenia.
                    <br>
                    Zarówno konkaktowy adres email, kontaktowy numer telefonu, kontaktowy adres - Można modyfikować dowolnie przy późniejszym dodawaniu ogłoszeń.
                </p>
            </header>
            <div class="login_form_tile">
                <label for="email">Twój prywatny adres email:</label>
                <InputText id="email" type="email" @bind-Value="_registerDto.Email"/>
            </div>
            <div class="login_form_tile">
                <label for="phoneNumber">Twój prywatny numer telefonu:</label>
                <InputText id="phoneNumber" type="text" @bind-Value="_registerDto.PhoneNumber"/>
            </div>
            <div class="login_form_tile">
                <label for="password">Twoje hasło:</label>
                <InputText id="password" type="password" @bind-Value="_registerDto.Password"/>
            </div>
            <div class="login_form_tile">
                <label for="confirmPassword">Potwierdź hasło:</label>
                <InputText id="confirmPassword" type="password" @bind-Value="_registerDto.ConfirmPassword"/>
            </div>
            <div class="login_form_tile">
                <label for="contactEmail">Twój domyślny kontaktowy adres email, który ma być wyświetlany w Twoich ogłoszeniach:</label>
                <InputText id="contactEmail" type="email" @bind-Value="_registerDto.DefaultAdvertisementContactInfoEmail"/>
            </div>
            <div class="login_form_tile">
                <label for="contactPhone">Twój domyślnie kontaktowy numer telefonu, który ma być wyświetlany w twoich ogłoszeniach:</label>
                <InputText id="contactPhone" type="text" @bind-Value="_registerDto.DefaultAdvertisementContactInfoPhoneNumber"/>
            </div>
            <div class="login_form_tile">
                <label for="nickname">Twoja nazwa/imię jakie chcesz by się wyświetlało w Twoich ogłoszeniach:</label>
                <InputText id="nickname" type="text" @bind-Value="_registerDto.Nickname"/>
            </div>
            <header>
                <h3>Wypełnij domyślny adres odbioru kotów z twoich ogłoszeń</h3>
                <p>
                    Przy dodawaniu ogłoszenia, będziesz mógł wpisać inny adres.
                    <br>
                    W trosce o Twoje bezpieczeństwo nie musisz podawać ulicy i numeru domu - przekażesz je sam po kontakcie z ogłoszeniobiorcą.
                </p>
            </header>
            <div class="login_form_tile">
                <label for="DefaultAdvertisementPickupAddressCountry">Kraj:</label>
                <InputText id="DefaultAdvertisementPickupAddressCountry" type="text" @bind-Value="_registerDto.DefaultAdvertisementPickupAddressCountry"/>
            </div>
            <div class="login_form_tile">
                <label for="DefaultAdvertisementPickupAddressState">Województwo:</label>
                <InputText id="DefaultAdvertisementPickupAddressState" type="text" @bind-Value="_registerDto.DefaultAdvertisementPickupAddressState"/>
            </div>
            <div class="login_form_tile">
                <label for="DefaultAdvertisementPickupAddressZipCode">Kod pocztowy:</label>
                <InputText id="DefaultAdvertisementPickupAddressZipCode" type="text" @bind-Value="_registerDto.DefaultAdvertisementPickupAddressZipCode"/>
            </div>
            <div class="login_form_tile">
                <label for="DefaultAdvertisementPickupAddressCity">Miasto:</label>
                <InputText id="DefaultAdvertisementPickupAddressCity" type="text" @bind-Value="_registerDto.DefaultAdvertisementPickupAddressCity"/>
            </div>
            <div class="login_form_tile">
                <label for="DefaultAdvertisementPickupAddressStreet">Ulica:</label>
                <InputText id="DefaultAdvertisementPickupAddressStreet" type="text" @bind-Value="_registerDto.DefaultAdvertisementPickupAddressStreet"/>
            </div>
            <div class="login_form_tile">
                <label for="DefaultAdvertisementPickupAddressBuildingNumber">Numer budynku:</label>
                <InputText id="DefaultAdvertisementPickupAddressBuildingNumber" type="text" @bind-Value="_registerDto.DefaultAdvertisementPickupAddressBuildingNumber"/>
            </div>
            <div class="login_form_tile_buttons">
                <button class="default_btn btn_green" type="submit" disabled="@_isProcessing">
                    @if (_isProcessing)
                    {
                        <span>Rejestracja...</span>
                    }
                    else
                    {
                        <span>Zatwierdź rejestrację konta</span>
                    }
                </button>
                <a href="/register" class="default_btn">Zakładałeś juz konto? Zaloguj się</a>
            </div>
        </EditForm>
    </section>

    <aside class="register_photo">
    </aside>
</div>

@code{
    private readonly RegisterDto _registerDto = new();
    private bool _isProcessing;
    private Link _createPersonLink = null!;

    protected override void OnInitialized()
    {
        Link? createPersonLink = ApiNavigation.Response?.Links.FirstOrDefault(x => x.Rel == EndpointRels.Person.CreatePersonRel);
        if (createPersonLink is null)
        {
            NavigationManager.NavigateTo("/");
            return;
        }

        _createPersonLink = createPersonLink;
    }

    private async Task HandleRegister()
    {
        _isProcessing = true;
        
        CreatePersonRequest registerRequest = new(
            Nickname: _registerDto.Nickname,
            Email: _registerDto.Email,
            PhoneNumber: _registerDto.PhoneNumber,
            Password: _registerDto.Password,
            DefaultAdvertisementPickupAddressCountry: _registerDto.DefaultAdvertisementPickupAddressCountry,
            DefaultAdvertisementPickupAddressState: _registerDto.DefaultAdvertisementPickupAddressState,
            DefaultAdvertisementPickupAddressZipCode: _registerDto.DefaultAdvertisementPickupAddressZipCode,
            DefaultAdvertisementPickupAddressCity: _registerDto.DefaultAdvertisementPickupAddressCity,
            DefaultAdvertisementPickupAddressStreet: _registerDto.DefaultAdvertisementPickupAddressStreet,
            DefaultAdvertisementPickupAddressBuildingNumber: _registerDto.DefaultAdvertisementPickupAddressBuildingNumber,
            DefaultAdvertisementContactInfoEmail: _registerDto.DefaultAdvertisementContactInfoEmail,
            DefaultAdvertisementContactInfoPhoneNumber: _registerDto.DefaultAdvertisementContactInfoPhoneNumber
        );

        PersonHateoasResponse? createPersonResponse = 
            await ApiClient.PostAsync<CreatePersonRequest, PersonHateoasResponse>(_createPersonLink.Href, registerRequest);

        if (createPersonResponse is not null)
        {
            NavigationManager.NavigateTo("/");
        }
        _isProcessing = false;
    }

    private class RegisterDto
    {
        public string Nickname { get; set; } = "";
        public string PhoneNumber { get; set; } = "";
        public string Email { get; set; } = "";
        public string Password { get; set; } = "";
        public string ConfirmPassword { get; set; } = "";
        public string DefaultAdvertisementPickupAddressCountry { get; set; } = "";
        public string? DefaultAdvertisementPickupAddressState { get; set; } = "";
        public string DefaultAdvertisementPickupAddressZipCode { get; set; } = "";
        public string DefaultAdvertisementPickupAddressCity { get; set; } = "";
        public string? DefaultAdvertisementPickupAddressStreet { get; set; } = "";
        public string? DefaultAdvertisementPickupAddressBuildingNumber { get; set; } = "";
        public string DefaultAdvertisementContactInfoEmail { get; set; } = "";
        public string DefaultAdvertisementContactInfoPhoneNumber { get; set; } = "";
    }

}