@page "/user/cats"
@attribute [Authorize]
@using KittySaver.Shared.Hateoas
@using KittySaver.Shared.Pagination
@using KittySaver.Shared.Responses
@using KittySaver.Wasm.Shared
@using KittySaver.Wasm.Shared.HttpClients
@using Microsoft.AspNetCore.Authorization
@inherits KittySaver.Wasm.Shared.Components.ApiAwareComponentBase
@inject IApiClient MainApiClient
@inject NavigationManager NavigationManager

<PageTitle>
    Uratujkota.pl - Twoje kotki
</PageTitle>

<div class="subpage_grid">
    <aside class="subpage_sidebar">

    </aside>
    <article class="subpage_content">
        <header class="subpage_header">
            <h1>Twoje kotki</h1>
            <div class="subpage_header_action">
                <a href="/user/cats/create" class="default_btn btn_green">+ Dodaj nowego kotka</a>
            </div>
        </header>
        <section class="subpage_main_info">
            <div class="subpage_description advertisement_element advertisement_element_warning">
                <p>
                    Aby koty były widoczne publicznie, dodaj je do ogłoszeń.
                </p>
            </div>
        </section>
        @{
            List<CatResponse> sortedCats = _cats.OrderByDescending(cat => cat.AdditionalRequirements?.Length).ToList();
            IEnumerable<CatResponse> leftColumn = sortedCats.Where((_, index) => index % 2 == 0);
            IEnumerable<CatResponse> rightColumn = sortedCats.Where((_, index) => index % 2 == 1);

            <section class="subpage_cats_grid">
                <div class="subpage_cats_grid_column">
                    @foreach (CatResponse cat in leftColumn)
                    {
                        <div class="advertisement_element subpage_cat_tile">
                            <header class="subpage_cat_tile_header">
                                <div class="subpage_cat_image">
                                    @if (cat.IsThumbnailUploaded)
                                    {
                                        <img alt="@cat.Name - uratujkota.pl"
                                             src="@cat.Links.FirstOrDefault(x => x.Rel == EndpointRels.Cat.GetCatThumbnailRel)?.Href">
                                    }
                                    else
                                    {
                                        <img alt="uratujkota.pl" src="/imgs/defaultCat.webp">
                                    }
                                </div>
                                <div class="subpage_cat_info">
                                    <h2>@cat.Name</h2>
                                    <div class="subpage_cat_info_status">
                                        <span>Czy jest dodany do ogłoszenia:</span> <strong class="subpage_cat_info_btn @Dictionaries.IsAssignedToAdvertisementDictionary[cat.IsAssignedToAdvertisement].className">
                                            @((MarkupString)Dictionaries.IsAssignedToAdvertisementDictionary[cat.IsAssignedToAdvertisement].text)
                                        </strong>
                                    </div>
                                    <div class="subpage_cat_info_status">
                                        <span>Stan kota:</span> <strong class="subpage_cat_info_btn @Dictionaries.HealthStatusDictionary[cat.HealthStatus].className">
                                            @Dictionaries.HealthStatusDictionary[cat.HealthStatus].text
                                        </strong>
                                    </div>
                                    <div class="subpage_cat_info_status">
                                        <span>Potrzeba weterynarza:</span> <strong class="subpage_cat_info_btn @Dictionaries.MedicalHelpUrgencyDictionary[cat.MedicalHelpUrgency].className">
                                            @Dictionaries.MedicalHelpUrgencyDictionary[cat.MedicalHelpUrgency].text
                                        </strong>
                                    </div>
                                    <div class="subpage_cat_info_status">
                                        <span>Wykastrowany/Wysterylizowany:</span> <strong class=" subpage_cat_info_btn @Dictionaries.IsCastratedDictionary[cat.IsCastrated].className">
                                            @Dictionaries.IsCastratedDictionary[cat.IsCastrated].text
                                        </strong>
                                    </div>
                                    <div class="subpage_cat_info_status">
                                        <span>Opis kota:</span> <strong class=" subpage_cat_info_btn @Dictionaries.AgeCategoryDictionary[cat.AgeCategory].className">
                                            @Dictionaries.AgeCategoryDictionary[cat.AgeCategory].text
                                        </strong>
                                    </div>
                                </div>
                            </header>
                            @if (!string.IsNullOrWhiteSpace(cat.AdditionalRequirements))
                            {
                                <article class="subpage_cat_additional_requirements">
                                    <strong>Kilka słów o tym słodkim kotku od właściciela:</strong>
                                    <p>
                                        @cat.AdditionalRequirements
                                    </p>
                                </article>
                            }
                            <div class="subpage_cat_actions">
                                @{
                                    bool isUpdateCatLinkEnabled = cat.Links.Any(x => x.Rel == EndpointRels.Cat.UpdateCatRel);
                                    bool isUpdateCatThumbnailLinkEnabled = cat.Links.Any(x => x.Rel == EndpointRels.Cat.UpdateCatThumbnailRel);
                                    bool isDeleteCatLinkEnabled = cat.Links.Any(x => x.Rel == EndpointRels.Cat.DeleteCatRel);
                                }
                                <a href="/user/cats/manage-thumbnail/@cat.Id" class="default_btn btn_blue @(isUpdateCatThumbnailLinkEnabled ? "" : "link_disabled")">Zmień główne zdjęcie kota</a>
                                <a href="/user/cats/manage-gallery/@cat.Id" class="default_btn btn_blue">Zarządzaj galerią kota</a>
                                <a href="/user/cats/update/@cat.Id" class="default_btn btn_orange @(isUpdateCatLinkEnabled ? "" : "link_disabled")">Edytuj dane</a>
                                <a href="/user/cats/delete/@cat.Id" class="default_btn btn_red @(isDeleteCatLinkEnabled ? "" : "link_disabled")">Usuń kota</a>
                            </div>
                        </div>
                    }
                </div>
                <div class="subpage_cats_grid_column">
                    @foreach (CatResponse cat in rightColumn)
                    {
                        <div class="advertisement_element subpage_cat_tile">
                            <header class="subpage_cat_tile_header">
                                <div class="subpage_cat_image">
                                    @if (cat.IsThumbnailUploaded)
                                    {
                                        <img alt="@cat.Name - uratujkota.pl"
                                             src="@cat.Links.FirstOrDefault(x => x.Rel == EndpointRels.Cat.GetCatThumbnailRel)?.Href">
                                    }
                                    else
                                    {
                                        <img alt="uratujkota.pl" src="/imgs/defaultCat.webp">
                                    }
                                </div>
                                <div class="subpage_cat_info">
                                    <h2>@cat.Name</h2>
                                    <div class="subpage_cat_info_status">
                                        <span>Czy jest dodany do ogłoszenia:</span> <strong class="subpage_cat_info_btn @Dictionaries.IsAssignedToAdvertisementDictionary[cat.IsAssignedToAdvertisement].className">
                                            @((MarkupString)Dictionaries.IsAssignedToAdvertisementDictionary[cat.IsAssignedToAdvertisement].text)
                                        </strong>
                                    </div>
                                    <div class="subpage_cat_info_status">
                                        <span>Stan kota:</span> <strong class="subpage_cat_info_btn @Dictionaries.HealthStatusDictionary[cat.HealthStatus].className">
                                            @Dictionaries.HealthStatusDictionary[cat.HealthStatus].text
                                        </strong>
                                    </div>
                                    <div class="subpage_cat_info_status">
                                        <span>Potrzeba weterynarza:</span> <strong class="subpage_cat_info_btn @Dictionaries.MedicalHelpUrgencyDictionary[cat.MedicalHelpUrgency].className">
                                            @Dictionaries.MedicalHelpUrgencyDictionary[cat.MedicalHelpUrgency].text
                                        </strong>
                                    </div>
                                    <div class="subpage_cat_info_status">
                                        <span>Wykastrowany/Wysterylizowany:</span> <strong class=" subpage_cat_info_btn @Dictionaries.IsCastratedDictionary[cat.IsCastrated].className">
                                            @Dictionaries.IsCastratedDictionary[cat.IsCastrated].text
                                        </strong>
                                    </div>
                                    <div class="subpage_cat_info_status">
                                        <span>Wiek kota:</span> <strong class=" subpage_cat_info_btn @Dictionaries.AgeCategoryDictionary[cat.AgeCategory].className">
                                            @Dictionaries.AgeCategoryDictionary[cat.AgeCategory].text
                                        </strong>
                                    </div>
                                </div>
                            </header>
                            @if (!string.IsNullOrWhiteSpace(cat.AdditionalRequirements))
                            {
                                <article class="subpage_cat_additional_requirements">
                                    <strong>Opis kota:</strong>
                                    <p>
                                        @cat.AdditionalRequirements
                                    </p>
                                </article>
                            }
                            <div class="subpage_cat_actions">
                                @{
                                    bool isUpdateCatLinkEnabled = cat.Links.Any(x => x.Rel == EndpointRels.Cat.UpdateCatRel);
                                    bool isUpdateCatThumbnailLinkEnabled = cat.Links.Any(x => x.Rel == EndpointRels.Cat.UpdateCatThumbnailRel);
                                    bool isDeleteCatLinkEnabled = cat.Links.Any(x => x.Rel == EndpointRels.Cat.DeleteCatRel);
                                }
                                <a href="/user/cats/manage-thumbnail/@cat.Id" class="default_btn btn_blue @(isUpdateCatThumbnailLinkEnabled ? "" : "link_disabled")">Zmień główne zdjęcie kota</a>
                                <a href="/user/cats/manage-gallery/@cat.Id" class="default_btn btn_blue">Zarządzaj galerią kota</a>
                                <a href="/user/cats/update/@cat.Id" class="default_btn btn_orange @(isUpdateCatLinkEnabled ? "" : "link_disabled")">Edytuj dane</a>
                                <a href="/user/cats/delete/@cat.Id" class="default_btn btn_red @(isDeleteCatLinkEnabled ? "" : "link_disabled")">Usuń kota</a>
                            </div>
                        </div>
                    }
                </div>
            </section>
        }
    </article>
    <aside class="subpage_sidebar">

    </aside>
</div>

@code{
    private List<CatResponse> _cats = [];

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await ApiNavigation.RefreshAsync();
        await LoadCats();
    }

    private async Task LoadCats()
    {
        Link? ownerCatsLink = ApiNavigation.GetLink(EndpointRels.Cat.GetCatsRel);
        if (ownerCatsLink is null)
        {
            NavigationManager.NavigateTo("/");
            return;
        }
        PagedList<CatResponse>? catsPagedList = await MainApiClient.GetAsync<PagedList<CatResponse>>(ownerCatsLink.Href);
        _cats = catsPagedList?.Items.ToList() ?? [];
    }

}