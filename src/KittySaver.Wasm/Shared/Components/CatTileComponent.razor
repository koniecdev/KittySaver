@using KittySaver.Shared.Hateoas
@using KittySaver.Shared.Responses

<div class="advertisement_element subpage_cat_tile">
    <header class="subpage_cat_tile_header">
        <div class="subpage_cat_image_wrapper">
            <div class="subpage_cat_image">
                @if (Cat.IsThumbnailUploaded)
                {
                    <img alt="@Cat.Name - uratujkota.pl"
                         src="@Cat.Links.FirstOrDefault(x => x.Rel == EndpointRels.Cat.GetCatThumbnailRel)?.Href">
                }
                else
                {
                    <img alt="uratujkota.pl" src="/imgs/defaultCat.webp">
                }
            </div>
        </div>
        <div class="subpage_cat_info">
            <h2>@Cat.Name</h2>
            @if (!IsOnlyEssentialsRequested)
            {
                @if (IsManagementView)
                {
                    <div class="subpage_cat_info_sentence">
                        <strong class="subpage_cat_info_btn">
                            @(Cat.IsAssignedToAdvertisement ? "Kot jest dodany do ogłoszenia." : "Kot nie jest dodany do ogłoszenia.")
                        </strong>
                    </div>
                }

                <div class="subpage_cat_info_sentence @Dictionaries.HealthStatusDictionary[Cat.HealthStatus].className">
                    <strong class="subpage_cat_info_btn">
                        @TranslateHealthStatus(Cat.HealthStatus)
                    </strong>
                </div>
                <div class="subpage_cat_info_sentence">
                    <strong class="subpage_cat_info_btn">
                        @(Cat.IsCastrated ? "Wykastrowany/wysterylizowany." : "Niewykastrowany/niewysterylizowany.")
                    </strong>
                </div>
                <div class="subpage_cat_info_sentence @Dictionaries.MedicalHelpUrgencyDictionary[Cat.MedicalHelpUrgency].className">
                    <strong class="subpage_cat_info_btn">
                        @TranslateMedicalUrgency(Cat.MedicalHelpUrgency)
                    </strong>
                </div>
                <div class="subpage_cat_info_sentence">
                    <strong class="subpage_cat_info_btn">
                        @TranslateAgeCategory(Cat.AgeCategory)
                    </strong>
                </div>
            }
        </div>
    </header>
    @if (!IsOnlyEssentialsRequested && !string.IsNullOrWhiteSpace(Cat.AdditionalRequirements))
    {
        <article class="subpage_cat_additional_requirements">
            <strong>Opis kota</strong>
            <p>
                @Cat.AdditionalRequirements
            </p>
        </article>
    }
    @if (IsManagementView)
    {
        <div class="subpage_cat_actions">
            @{
                bool isUpdateCatLinkEnabled = Cat.Links.Any(x => x.Rel == EndpointRels.Cat.UpdateCatRel);
                bool isUpdateCatThumbnailLinkEnabled = Cat.Links.Any(x => x.Rel == EndpointRels.Cat.UpdateCatThumbnailRel);
                bool isDeleteCatLinkEnabled = Cat.Links.Any(x => x.Rel == EndpointRels.Cat.DeleteCatRel);
            }
            @if (isUpdateCatThumbnailLinkEnabled)
            {
                <a href="/user/cats/thumbnail/@Cat.Id" class="default_btn">
                    Zmień główne zdjęcie
                </a>
            }
            <a href="/user/cats/gallery/@Cat.Id" class="default_btn">
                Galeria kota
            </a>
            @if (isUpdateCatLinkEnabled)
            {
                <a href="/user/cats/update/@Cat.Id" class="default_btn">
                    Edytuj dane
                </a>
            }
            @if (isDeleteCatLinkEnabled)
            {
                <a href="/user/cats/delete/@Cat.Id" class="default_btn btn_red">
                    Usuń kota
                </a>
            }
        </div>
    }
</div>

@code 
{

    /// <summary>
    /// The cat data to display in the tile.
    /// </summary>
    [Parameter]
    public CatResponse Cat { get; set; } = null!;

    /// <summary>
    /// Determines if this tile is being used in the cat management view.
    /// When true, shows advertisement status and management buttons.
    /// When false, hides these elements (for public advertisement view).
    /// </summary>
    [Parameter]
    public bool IsManagementView { get; set; }

    [Parameter] public bool IsOnlyEssentialsRequested { get; set; }

    /// <summary>
    /// Tłumaczy status zdrowia kota bez powtarzania słowa "kot"
    /// </summary>
    private string TranslateHealthStatus(string status)
    {
        return status.ToLower() switch
        {
            "good" => "Wolny od chorób.",
            "unknown" => "Nie został zbadany pod względem chorób.",
            "chronicminor" => "Posiada choroby przewlekłe.",
            "chronicserious" => "Posiada poważne choroby przewlekłe.",
            "terminal" => "Jest śmiertelnie chory.",
            _ => status.StartsWith("Kot") ? status.Replace("Kot ", "") : status
        };
    }

    /// <summary>
    /// Tłumaczy kategorię wiekową kota bez powtarzania słowa "kot"
    /// </summary>
    private string TranslateAgeCategory(string ageCategory)
    {
        return ageCategory.ToLower() switch
        {
            "baby" => "Kociak.",
            "adult" => "Dorosły.",
            "senior" => "Senior.",
            _ => ageCategory.StartsWith("Kot ") ? ageCategory.Replace("Kot ", "") : ageCategory
        };
    }

    /// <summary>
    /// Tłumaczy informację o potrzebie pomocy weterynaryjnej bez powtarzania słowa "kot"
    /// </summary>
    private string TranslateMedicalUrgency(string urgency)
    {
        return urgency.ToLower() switch
        {
            "havetoseevet" => "Musi zostać pokazany weterynarzowi.",
            "shouldseevet" => "Powinien zostać pokazany weterynarzowi.",
            _ => urgency.StartsWith("Kot ") ? urgency.Replace("Kot ", "") : urgency
        };
    }
}